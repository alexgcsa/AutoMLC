<START> ::= <DEFINE-THRESHOLD-LEVEL> <MLC-ALGORITHMS>
<MLC-ALGORITHMS> ::=  <MLC-PT> | <MLC-AA> | <META-MLC-LEVEL>
<MLC-PT> ::= <ALGS-PT> <ALGS-SLC>


<ALGS-SLC> ::= <ALGS-SLC-WITH-FS> | <ALG-TYPE-WITHOUT-FS> | <META-SLC>

<ALGS-SLC-WITH-FS> ::= <ASC> <ALG-TYPE-WITHOUT-FS>
<ASC> ::= ASC <sm>

<ALG-TYPE-WITHOUT-FS> ::= <TREES> | <RULES> | <LAZY> | <FUNCTIONS> | <BAYES> | <EXCEPTIONS>

<TREES> ::= <J48> | DecisionStump | <RandomForest_RandomTree_REPTree> <md>

<J48> ::= J48 <J48-Complement> <J48-Basics>
<J48-Complement> ::= <cf> <sr> | True
<cf> ::= RANDFLOAT(0.0,1.0)
<sr> ::= True | False
<J48-Basics> ::= <mno> <ct> <bs> <umc> <ul>
<mno> ::= RANDINT_TYPE0(1,64)
<ct> ::= True | False
<bs> ::= True | False
<umc> ::= True | False
<ul> ::= True | False

<RandomForest_RandomTree_REPTree> ::= <RandomForest_RandomTree> <nf> | <REPTree>
<RandomForest_RandomTree> ::= <RandomForest> | <RandomTree>
<RandomForest> ::= RandomForest <nt>
<nt> ::= RANDINT_TYPE0(2,256)
<nf> ::= RANDINT_TYPE0(2,32) | 0
<md> ::= RANDINT_TYPE0(2,20) | 0

<RandomTree> ::= RandomTree <mw> <nfbgt>
<mw> ::= RANDINT_TYPE0(1,64)
<nfbgt> ::= 0 | <growing_the_tree_and_backfitting>
<growing_the_tree_and_backfitting> ::= RANDINT_TYPE0(2,5)

<REPTree> ::= REPTree <mw> <up>
<up> ::= True | False


<RULES> ::= <DT> | <JRip> | <OneR> | <PART> | ZeroR
<DT> ::= DT <em> <uibk> <sm> <crv> 
<em> ::= acc | rmse | mae | auc
<uibk> ::= True | False
<sm> ::= GreedyStepwise | BestFirst
<crv> ::= 1 | 2 | 3 | 4 

<JRip> ::= JRip <mtw> <cer> <up> <o> 
<mtw> ::= RANDFLOAT(1.0,5.0)
<cer> ::= True | False
<o> ::= RANDINT_TYPE0(1,5) 


<OneR> ::= OneR <mbs>
<mbs> ::= RANDINT_TYPE0(1,32)


<PART> ::= PART <PART-BASICS> <PART-CONSTRAINTS>
<PART-BASICS> ::= <mno> <bs>
<PART-CONSTRAINTS> ::= True <nr> | False
<nr> ::= RANDINT_TYPE0(2,5)


<LAZY> ::= <KNN> | <KStar> 

<KNN> ::= KNN <k_nn> <loo> <dw> 
<k_nn> ::= RANDINT_TYPE0(1,64)
<loo> ::= True | False
<dw> ::= F | I | None

<KStar> ::= KStar <gb> <eab> <mm>
<gb> ::= RANDINT_TYPE0(1,100)
<eab> ::= True | False
<mm> ::= a | d | m | n


<FUNCTIONS> ::= <VotedPerceptron> | <MultiLayerPerc> |  <SGD_LR> <r> | <SeqMinOptimization>
<VotedPerceptron> ::= VotedPerceptron <i> <mk> <e>
<i> ::= RANDINT_TYPE0(1,10)
<mk> ::= RANDINT_TYPE0(5000,50000)
<e> ::= RANDFLOAT(0.2,5.0)

<MultiLayerPerc> ::= MultiLayerPerc <lr> <m> <nhn> <n2b> <reset> <decay>
<lr> ::= RANDFLOAT(0.1,1.0)
<m> ::= RANDFLOAT(0.0,1.0) 
<nhn> ::= a | i | o | t 
<n2b> ::= True | False
<reset> ::= True | False
<decay> ::= True | False

<SGD_LR> ::= LogisticRegression | <StocGradDescent>

<StocGradDescent> ::= StocGradDescent <lf> <lr_sgd> <nn> <nrmv>
<lf> ::= 0 | 1 | 2
<lr_sgd> ::= RANDFLOAT(0.00001,1.0)
<nn> ::= True | False
<nrmv> ::= True | False

<r> ::= RANDFLOAT(0.000000000001,10.0)


<SeqMinOptimization> ::= SeqMinOptimization <c> <ft> <bcm> <kernel>
<c> ::= RANDFLOAT(0.5,1.5) 
<ft> ::= 0 | 1 | 2 
<bcm> ::= True | False
<kernel> ::= <poly_kern> <exp> <ulo> | Puk <om> <sig> | RBFKernel <g>
<poly_kern> ::= NormalizedPolyKernel | PolyKernel
<exp> ::= RANDFLOAT(0.2,5.0)
<ulo> ::= True | False
<om> ::= RANDFLOAT(0.1,1.0)
<sig> ::= RANDFLOAT(0.1,10.0)
<g> ::= RANDFLOAT(0.001,1.0)

<BAYES> ::= NaiveBayes <NB-Parameters> | <BayesianNetworkClassifiers> | NaiveBayesMultinomial
<NB-Parameters> ::= uke | usd | None
<BayesianNetworkClassifiers> ::= TAN | K2 | HillClimber | LAGDHillClimber | SimulatedAnnealing | TabuSearch


<EXCEPTIONS> ::= <SimpleLog_LMT> <uaic> <wtb_activate>
<SimpleLog_LMT> ::= <LogisticModelTrees> | <SimpleLogistic>

<SimpleLogistic> ::= SimpleLogistic <ucv>
<ucv> ::= True | False

<LogisticModelTrees> ::= LogisticModelTrees <cn> <sor> <fr> <eop>
<cn> ::= True | False
<sor> ::= True | False
<fr> ::= True | False
<eop> ::= True | False

<wtb_activate> ::= True <wtb> | False
<uaic> ::= True | False
<wtb> ::= RANDFLOAT(0.0,1.0)


<META-SLC> ::= <META-SLC1-ALGS> | <META-SLC2-ALGS> | <META-SLC3-ALGS> | <META-SLC4-ALGS>



<META-SLC1-ALGS> ::=  <LWL_AdaM1> <ALG-WEIGHTED-TYPE> 
<LWL_AdaM1> ::=  <LWL> | <AdaM1>
<ALG-WEIGHTED-TYPE> ::= <TREES> | <RULES-PARTIAL> | <KNN> | <BAYES> | <FUNCTIONS-PARTIAL>
<RULES-PARTIAL> ::= <DT> | <JRip> | <PART> | ZeroR
<FUNCTIONS-PARTIAL> ::= <MultiLayerPerc> |  <SeqMinOptimization> | <SimpleLogistic> <uaic> <wtb_activate>

<LWL> ::= LWL <k_lwl_activate> <wk_activate>
<k_lwl_activate> ::= True <k_lwl> | False
<k_lwl> ::= -1 | 10| 30 | 60 | 90 | 120
<wk_activate> ::= True <wk> | False
<wk> ::= 0 | 1 | 2 | 3 | 4 

<AdaM1> ::= AdaM1 <wt> <ur> <ni_ada_and_bagging>
<wt> ::= RANDINT_TYPE0(50,100) | 100 
<ni_ada_and_bagging> ::= RANDINT_TYPE0(2,128)
<ur> ::= True | False


<META-SLC2-ALGS> ::= RandomCommittee <ni_random_methods> <ALG-TYPE_RC>
<sss> ::= RANDFLOAT(0.1,1.0)
<ni_random_methods> ::= RANDINT_TYPE0(2,64)
<ALG-TYPE_RC> ::= <RandomForest_RandomTree_REPTree> <md> | <StocGradDescent> <r> | <MultiLayerPerc>


<META-SLC3-ALGS> ::= RandomSubspace <sss> <ni_random_methods> <ALG-TYPE-WITHOUT-FS> | <Bagging> <ALG-TYPE-WITHOUT-FS>
<Bagging> ::= BaggingSLC <BaggingSLC_BASICS> <ni_ada_and_bagging>
<BaggingSLC_BASICS> ::= False <bsp-bagg> | True 100
<bsp-bagg> ::= RANDINT_TYPE0(10,100)


<META-SLC4-ALGS> ::= <Stacking_Vote> <ALG-TYPE-WITHOUT-FS> <ALG-TYPE-WITHOUT-FS> | <Stacking_Vote> <ALG-TYPE-WITHOUT-FS> <ALG-TYPE-WITHOUT-FS> <ALG-TYPE-WITHOUT-FS> | <Stacking_Vote> <ALG-TYPE-WITHOUT-FS> <ALG-TYPE-WITHOUT-FS> <ALG-TYPE-WITHOUT-FS> <ALG-TYPE-WITHOUT-FS> | <Stacking_Vote> <ALG-TYPE-WITHOUT-FS> <ALG-TYPE-WITHOUT-FS> <ALG-TYPE-WITHOUT-FS> <ALG-TYPE-WITHOUT-FS> <ALG-TYPE-WITHOUT-FS>

<Stacking_Vote> ::= Stacking | Vote <cr> 
<cr> ::= AVG | PROD | MAJ | MIN | MAX





<ALGS-PT> ::= <ALGS-PT1> | <ALGS-PT2> | <ALGS-PT3> | <ALGS-PT4>
<ALGS-PT1> ::= BR | CC | LP

<ALGS-PT2> ::= <BRq_and_CCq> <dsr>  | <ComplexCC_Trellis> | FW | RT | <LP_based>
<BRq_and_CCq> ::= BRq | CCq
<dsr> ::= RANDFLOAT(0.2,0.8)
<ComplexCC_Trellis> ::= PCC | <MCC_and_CT> <ii> <eval_metrics> | <CDN_and_CDT> <i_cdn_cdt> <ci>
<MCC_and_CT> ::= MCC <chi_MCC> | <CT>
<CDN_and_CDT> ::= CDN | <CDT>
<chi_MCC>::= <chi_CT> | 0
<ii> ::= RANDINT_TYPE0(2,100)
<eval_metrics> ::= Accuracy | Jaccard-index | Hamming-score | Exact-match | Jaccard-distance | Hamming-loss | ZeroOne-loss | Harmonic-score | One-error | Rank-loss | Avg-precision | Log-Loss-lim:L | Log-Loss-lim:D | Micro-Precision | Micro-Recall | Macro-Precision | Macro-Recall | F1-micro-averaged | F1-macro-averaged-by-example | F1-macro-averaged-by-label | AUPRC-macro-averaged | AUROC-macro-averaged | Levenshtein-distance 
<CT> ::= CT <chi_CT> <w> <dp>
<chi_CT> ::= RANDINT_TYPE0(2,1500) 
<dp> ::= C | I | Ib | Ibf | H | Hbf | X | F | None
<w> ::= 0 1 | -1 <d>
<d> ::= RANDINT_TYPE1(1,SQRT(L)+1)
<CDT> ::= CDT <w> <dp>
<i_cdn_cdt> ::= RANDINT_TYPE0(101,1000) 
<ci> ::= RANDINT_TYPE0(1,100)
<LP_based> ::= <PS_and_PSt_and_RAKEL-based> <sv> <pv>
<PS_and_PSt_and_RAKEL-based> ::= PS | PSt | <RAkEL-based>
<RAkEL-based> ::= <RAkEL_and_RAKELd> <les>
<RAkEL_and_RAKELd> ::= RAkEL <sre> | RAkELd
<sv> ::= RANDINT_TYPE0(0,5) 
<pv> ::= RANDINT_TYPE0(1,5) 
<les> ::= RANDINT_TYPE2(1,L/2)
<sre> ::= RANDINT_TYPE3(2,min(2L;100))

<ALGS-PT3> ::= BCC <dp_complete>
<dp_complete> ::= L | <dp>

<ALGS-PT4> ::= PMCC <B> <ts> <ii> <chi_PMCC> <ps> <eval_metrics>
<B> ::= RANDFLOAT(0.01,0.99)
<ts> ::= 0 | 1 
<chi_PMCC> ::= RANDINT_TYPE0(51,1500)
<ps> ::= RANDINT_TYPE0(1,50)


<MLC-AA> ::= <ML-BPNN> | <ML-DBPNN> <ML-BPNN>
<ML-BPNN> ::= ML-BPNN <ne> <nhu_bpnn> <lr_bpnn> <m_bpnn>						       
<ne> ::= RANDINT_TYPE0(10,1000)                                           
<nhu_bpnn> ::= RANDINT_TYPE4((0.2,1.0)*n_attributes)
<lr_bpnn> ::= RANDFLOAT(0.001,0.1)                                  
<m_bpnn> ::=  RANDFLOAT(0.2,0.8)
<ML-DBPNN> ::= ML-DBPNN <ne> <nhu_bpnn> <lr_bpnn> <m_bpnn> <rbm>		
<rbm> ::= RANDINT_TYPE0(1,5)                                             
									

<META-MLC-LEVEL> ::= <META-MLC1> | <META-MLC2> | <META-MLC3> | <META-MLC4> | <MBR>

<META-MLC1> ::= <ALG-META-MLC1> <META-MLC1-OPT>
<ALG-META-MLC1> ::= SM | <RSML> | <MLC-BMaD>
<META-MLC1-OPT> ::= <MLC-PT> | <ML-BPNN>
<RSML> ::= RSML <bsp> <i_metamlc> <ap>
<bsp> ::= RANDINT_TYPE0(10,100) 
<i_metamlc> ::= RANDINT_TYPE0(10,50)
<ap> ::= RANDINT_TYPE0(10,100)
<MLC-BMaD> ::= MLC-BMaD <s> <tshd>
<s> ::= RANDINT_TYPE5(1,L)
<tshd> ::= RANDFLOAT(0.0,1.0)

<META-MLC2> ::= <ALG-META-MLC2> <META-MLC2-FULL> 
<META-MLC2-FULL> ::=  <META-MLC2-CONST> | <ML-BPNN>
<META-MLC2-CONST>  ::= <META-MLC2-OPT> <ALGS-SLC>
<META-MLC2-OPT> ::= <ALGS-PT1> | <ALGS-PT2> | <ALGS-PT4>
<ALG-META-MLC2> ::= <BAGGING_AND_ENSEMBLE-MLC> <i_metamlc>
<BAGGING_AND_ENSEMBLE-MLC> ::= BaggingML | BaggingMLDup <bsp> | EnsembleML <bsp_ensembleML>
<bsp_ensembleML> ::= RANDINT_TYPE0(52,72) 


<META-MLC3> ::= <ALG-META-MLC3>  <META-MLC3-FULL>
<META-MLC3-FULL> ::=  <META-MLC3-CONST> | <ML-BPNN>
<META-MLC3-CONST>  ::= <META-MLC3-OPT> <ALGS-SLC>
<META-MLC3-OPT> ::= <ALGS-PT1> | <ALGS-PT2> | <ALGS-PT3>
<ALG-META-MLC3> ::= <EM_CM>  <i_metamlc> 
<EM_CM> ::= EM | CM 


<META-MLC4> ::= <HOMER> <ALGS-PT1> <ALGS-SLC>
<HOMER> ::= HOMER <t> <k_homer>
<t> ::= BalancedClustering | Clustering | Random
<k_homer> ::= RANDINT_TYPE6(2,L-1) 

<MBR> ::= MBR BR <ALGS-SLC>

<DEFINE-THRESHOLD-LEVEL> ::= threshold <predtshd>
<predtshd> ::= PCut1 | PCutL | RANDFLOAT(0.00000000000000000001,1.00)
